using System.IO;
using System.Text;
using System;
using OfficeOpenXml;
namespace duqu
{
    class duqu
    {
        static void Main()
        {
            FileInfo newFile1 = new FileInfo(@"./data/all.xlsx");
            ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

            ExcelPackage package = new ExcelPackage(newFile1);//创建包
            ExcelWorkbook workbook = (ExcelWorkbook)package.Workbook;
            ExcelWorksheet worksheet0 = (ExcelWorksheet)workbook.Worksheets[0];
            ExcelWorksheet worksheet1 = (ExcelWorksheet)workbook.Worksheets[1];

            method m1 = new method(worksheet0, worksheet1);
            int key = 0;//判断是否循环
            while (key == 0)//建立循环
            {
                string mode = null;
                Console.WriteLine("随机还是顺序？，随机s，顺序d,退出t");
                mode = Console.ReadLine();
                switch (mode)
                {
                    case "d":
                        {

                            try
                            {
                                m1.outputword(ref key);
                            }
                            catch
                            {
                                Console.WriteLine("发生错误，请重新输入，注意检查");
                            }
                            break;
                        }
                    case "s":
                        {
                            try
                            {
                                Console.WriteLine("几个？");
                                int[] number = new int[int.Parse(Console.ReadLine())];//获取要输出的单词个数
                                string s = worksheet1.Cells[1, 1].ToText();//获取单词总个数
                                m1.creatrandom(ref number, int.Parse(s.Substring(0, s.Length - 1)));//创建随机单词的序号
                                m1.randomword(number, ref key);//输出随机单词
                            }
                            catch
                            {
                                Console.WriteLine("发生错误，请重新输入，注意检查");
                            }
                            break;
                        }
                    case "help":
                        {
                            StreamReader r = new StreamReader(@"./data/help.txt", Encoding.UTF8);
                            string l = r.ReadToEnd();
                            Console.WriteLine(l);
                            r.Close();
                        }
                        break;
                    case "t":
                        key = 1;
                        break;
                }
            }
            package.Save();
        }
    }
    class method
    {
        mean changword;
        ExcelWorksheet worksheet0, worksheet1;
        public method(ExcelWorksheet worksheet0, ExcelWorksheet worksheet1)
        {
            this.worksheet0 = worksheet0;
            this.worksheet1 = worksheet1;
            changword = new mean(worksheet0, worksheet1);
        }
        public void outputword(ref int key)//输出固定单词表
        {
            int point = 1;//表示是否退出
            Console.WriteLine("从第几个开始？");
            int star = int.Parse(Console.ReadLine());//第几个单词开始
            while (worksheet0.Cells[star, 1].Value != null && point == 1)
            {
                Console.WriteLine(worksheet0.Cells[star, 1].Value + " " + star + " 难度" + worksheet0.Cells[star, 3].Value);//标记当前位置并输出
                checkinput(ref point, star);
                if (point == (int)chec.继续)
                {
                    Console.WriteLine(worksheet0.Cells[star, 2].Value + " " + star);
                    checkinput(ref point, star);
                    star++;
                }

            }
            if (point == 1) { Console.WriteLine("没有这么多单词了"); }
            switch (point)
            {
                case (int)chec.跳转: break;
                case (int)chec.退出: key = 1; break;
            }


        }
        public void randomword(int[] shunxu, ref int key)//输出随机单词
        {
            int point = 1;//表示是否退出
            int biaohao = 0;// 记录数组下标
            while (point == 1 && biaohao < shunxu.Length)
            {
                int a = shunxu[biaohao];//提取下一个单词序号
                Console.WriteLine(worksheet0.Cells[a, 1].Value + " " + (biaohao + 1) + " 难度" + worksheet0.Cells[a, 3].Value);//标记当前位置并输出
                checkinput(ref point, a);
                if (point == (int)chec.继续)
                {
                    Console.WriteLine(worksheet0.Cells[a, 2].Value + " " + (biaohao + 1));
                    checkinput(ref point, a);
                }
                biaohao++;
            }
            if (point == 1) { Console.WriteLine("没有这么多单词了"); }
            switch (point)
            {
                case (int)chec.跳转: break;
                case (int)chec.退出: key = 1; break;
            }


        }
        public void creatrandom(ref int[] a, int number)//创建读取的单词序号
        {
            int leng = a.Length;
            Random r = new Random();
            a[0] = (int)r.Next(1, number);
            for (int i = 1; i < leng; i++)
            {
                int tool = (int)r.Next(1, number);
                bool flag = false;
                foreach (int k in a)//去重
                {
                    if (tool == k) { flag = true; break; }
                }
                if (flag) i--;
                else a[i] = tool;
            }

        }
        void checkinput(ref int point, int danciwhere)//检测输入操作
        {
            string s = Console.ReadLine();
            switch (s)
            {
                case "t":
                    point = (int)chec.退出;
                    break;
                case "z": point = (int)chec.跳转; break;
                case "help":
                    {
                        StreamReader r = new StreamReader(@"./data/help.txt", Encoding.UTF8);
                        string l = r.ReadToEnd();
                        Console.WriteLine(l);
                        point = 1;
                        r.Close();
                        checkinput(ref point, danciwhere);
                        break;
                    }
                case "addword":
                    {
                        changword.addword();
                        checkinput(ref point, danciwhere);
                    }
                    break;
                case "problem":
                    {
                        string tool1 = worksheet0.Cells[danciwhere, 3].ToText();
                        int tool2 = int.Parse(tool1.Substring(0, tool1.Length - 1));
                        tool2++;
                        worksheet0.Cells[danciwhere, 3].Value = tool2.ToString();
                    }
                    break;
                case "save":
                    {

                        string tool1 = worksheet0.Cells[danciwhere, 3].ToText();
                        int tool2 = int.Parse(tool1.Substring(0, tool1.Length - 1));
                        tool2--;
                        if (tool2 < 0) { tool2 = 0; }
                        worksheet0.Cells[danciwhere, 3].Value = tool2.ToString();
                    }
                    break;
                case "addmean":
                    {
                        changword.addmean(danciwhere);
                        checkinput(ref point, danciwhere);
                    }
                    break;
                case "changemean":
                    {
                        changword.changmean(danciwhere);
                        checkinput(ref point, danciwhere);
                    }
                    break;
                default: point = (int)chec.继续; break;
            }
        }//检查输入字符并进行操作
    }
    class mean
    {
        private ExcelWorksheet worksheet0;
        private ExcelWorksheet worksheet1;
        private int dancinumber;
        public mean(ExcelWorksheet worksheet0, ExcelWorksheet worksheet1)
        {
            this.worksheet0 = worksheet0;
            this.worksheet1 = worksheet1;
            string number = worksheet1.Cells[1, 1].ToText();
            this.dancinumber = int.Parse(number.Substring(0, number.Length - 1));
        }
        public void addword()
        {
            Console.WriteLine("单词");
            worksheet0.Cells[dancinumber + 1, 1].Value = Console.ReadLine();
            worksheet0.Cells[dancinumber + 1, 3].Value = 5;
            Console.WriteLine("意思");
            worksheet0.Cells[dancinumber + 1, 2].Value = Console.ReadLine();
            Console.WriteLine("添加完毕,在程序正常关闭后生效（不要按右上，按t）");
            dancinumber++;
            worksheet1.Cells[1, 1].Value = dancinumber;
        }
        public void addmean(int danciwhere)
        {
            Console.WriteLine("输入单词意思");
            string wordmean = Console.ReadLine();
            Console.WriteLine("你输入的单词意思为\t" + wordmean + "\n yes or no?");
            string save = Console.ReadLine();
            switch (save)
            {
                case "yes":
                    worksheet0.Cells[danciwhere, 2].Value = worksheet0.Cells[danciwhere, 2].ToText() + wordmean;
                    Console.WriteLine("添加完毕,在程序正常关闭后生效（不要按右上，按t）");
                    break;
                case "no":
                    Console.WriteLine("停止添加");
                    break;
                default:
                    Console.WriteLine("未确认，停止添加");
                    break;
            }
        }
        public void changmean(int danciwhere)
        {
            Console.WriteLine("输入单词意思");
            string wordmean = Console.ReadLine();
            Console.WriteLine("你输入的单词意思为\t" + wordmean + "\n" + "单词意思会被完全取代，yes or no？");
            string save = Console.ReadLine();
            switch (save)
            {
                case "yes":
                    worksheet0.Cells[danciwhere, 2].Value = wordmean;
                    Console.WriteLine("添加完毕,在程序正常关闭后生效（不要按右上，按t）");
                    break;
                case "no":
                    Console.WriteLine("停止添加");
                    break;
                default:
                    Console.WriteLine("未确认，停止添加");
                    break;
            }

        }
    }
    enum chec//操作
    {
        继续 = 1,
        退出 = 2,
        跳转 = 3,

    }
}
